#include<stdio.h>
#include<time.h>
#include<stdlib.h>
int main()
{
FILE *fptr1,*fptr2;
int i,first,last,middle,e,n,A[100],A2[100],j,k,temp;
clock_t t1,t2;
double m1,m2,m3,m4,m5,m6,best1,best2,worst1,worst2;

printf("enter the number of elements ");
scanf("%d",&n);
for(i=1;i<=n;i++)
	A[i]=rand()%500+1;
printf("enter the element to be searched ");
scanf("%d",&e);

fptr1=fopen("linear.dat","a");
fptr2=fopen("binary.dat","a");

printf("\n\nLINEAR SEARCH\n\n");
t1=clock();
k=0;
for(i=0;i<n;i++)
{
	if(A[i]==e)
	{
		printf("Element Found\n");
		k++;
		break;
	}
}
if(k==0)
	printf("Element not found\n");
t2=clock();
m1=(double)(t2-t1)/CLOCKS_PER_SEC;
printf("time taken for random input is %f\n",m1);
fprintf(fptr1,"%d",n);
fprintf(fptr1,"\t%f\n",m1);

j=0;
for(i=1;i<=n;i++)
{
	A2[j]=i;
	j++;
}
t1=clock();
k=0;
for(i=0;i<n;i++)
{
	if(A2[i]==e)
	{
		printf("Element Found\n");
		k++;
		break;
	}
}
if(k==0)
	printf("Element not found\n");
t2=clock();
m2=(double)(t2-t1)/CLOCKS_PER_SEC;
printf("time taken for ascending order is %f\n",m2);

j=0;
for(i=n;i>0;i--)
{
	A2[j]=i;
	j++;
}
t1=clock();
k=0;
for(i=0;i<n;i++)
{
	if(A2[i]==e)
	{
		printf("Element Found\n");
		k++;
		break;
	}
}
if(k==0)
	printf("Element not found\n");
t2=clock();
m3=(double)(t2-t1)/CLOCKS_PER_SEC;
printf("time taken for descending order is %f\n",m3);
if(m2>m3)
{
	best1=m3;
	worst1=m2;
}
else
{
	best1=m2;
	worst1=m3;
}


printf("\n\nBINARY SEARCH\n\n");
t1=clock();
for(i=0;i<n;i++)
	for(j=i;j<n;j++)
		if(A[i]>A[j])
		{
			temp=A[i];
			A[i]=A[j];
			A[j]=temp;
		}
i=0;
first=0;
last=n-1;
middle=(first+last)/2;
while(first<=last)
{
	if(A[middle]<e)
	{
		first=middle+1;
		middle=(first+last)/2;
	}
	else if(A[middle]==e)
	{
		printf("Element Found\n");
		i++;
		break;
	}
	else
	{
		last=middle-1;
		middle=(first+last)/2;
	}
}
if(i==0)
	printf("Element not found\n");
t2=clock();
m4=(double)(t2-t1)/CLOCKS_PER_SEC;
printf("time taken for random input is %f\n",m4);
fprintf(fptr2,"%d",n);
fprintf(fptr2,"\t%f\n",m4);

j=0;
for(i=1;i<=n;i++)
{
	A2[j]=i;
	j++;
}
t1=clock();
for(i=0;i<n;i++)
	for(j=i;j<n;j++)
		if(A2[i]>A2[j])
		{
			temp=A2[i];
			A2[i]=A2[j];
			A2[j]=temp;
		}
i=0;
first=0;
last=n-1;
middle=(first+last)/2;
while(first<=last)
{
	if(A2[middle]<e)
	{
		first=middle+1;
		middle=(first+last)/2;
	}
	else if(A2[middle]==e)
	{
		printf("Element Found\n");
		i++;
		break;
	}
	else
	{
		last=middle-1;
		middle=(first+last)/2;
	}
}
if(i==0)
	printf("Element not found\n");
t2=clock();
m5=(double)(t2-t1)/CLOCKS_PER_SEC;
printf("time taken for ascending order is %f\n",m5);

j=0;
for(i=n;i>0;i--)
{
	A2[j]=i;
	j++;
}
t1=clock();
for(i=0;i<n;i++)
	for(j=i;j<n;j++)
		if(A2[i]>A2[j])
		{
			temp=A2[i];
			A2[i]=A2[j];
			A2[j]=temp;
		}
i=0;
first=0;
last=n-1;
middle=(first+last)/2;
while(first<=last)
{
	if(A2[middle]<e)
	{
		first=middle+1;
		middle=(first+last)/2;
	}
	else if(A2[middle]==e)
	{
		printf("Element Found\n");
		i++;
		break;
	}
	else
	{
		last=middle-1;
		middle=(first+last)/2;
	}
}
if(i==0)
	printf("Element not found\n");
t2=clock();
m6=(double)(t2-t1)/CLOCKS_PER_SEC;
printf("time taken for descending order is %f\n",m6);
if(m5>m6)
{
	best2=m6;
	worst2=m5;
}
else
{
	best2=m5;
	worst2=m6;
}

printf("\n\nSEARCH     \tBEST CASE\tWORST CASE\tAVG CASE\n");
printf("Linear   \t%f\t%f\t%f\n",best1,worst1,m1);
printf("Binary	 \t%f\t%f\t%f\n",best2,worst2,m4);

fclose(fptr1);
fclose(fptr2);
return 0;
}
